"""
Django settings for client project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""
from pathlib import Path
from datetime import timedelta
from celery.schedules import crontab
import django
from django.utils.encoding import smart_str
django.utils.encoding.smart_text = smart_str
BASE_DIR = Path(__file__).resolve().parent.parent.parent
PROJECT_DIR = BASE_DIR.parent.parent

LOG_ROOT = PROJECT_DIR / 'var' / 'log'
RUN_ROOT = PROJECT_DIR / 'var' / 'run'
TMP_ROOT = PROJECT_DIR / 'var' / 'tmp'

MEDIA_ROOT = BASE_DIR / 'media'
STATIC_ROOT = BASE_DIR / 'static'
STATIC_URL = 'static/'
MEDIA_URL = 'media/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f(rg-xy!4t%atb05tvi(b7rnb+b4o!%4-bw6hlnz^(1g^6pyzm'

# SECURITY WARNING: don't run with debug turned on in production!
# defined in mode config


CORS_ORIGIN_ALLOW_ALL = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'corsheaders',
    'tinymce',

    'logger.apps.LoggerConfig',
    'account.apps.AccountConfig',
    'lombard.apps.LombardConfig',
    'payments.apps.PaymentsConfig',
    'settings_site'
]
TINYMCE_DEFAULT_CONFIG = {
    "height": "320px",
    "width": "100%",
    "plugins": "advlist autolink lists link charmap print preview anchor searchreplace visualblocks code "
    "fullscreen insertdatetime media table paste code help wordcount spellchecker",
    "toolbar": "undo redo | bold italic underline strikethrough | fontsizeselect formatselect | alignleft "
    "aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor "
    "backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | "
               "fullscreen  preview save print | insertfile image media pageembed template link anchor codesample | "
               "a11ycheck ltr rtl | showcomments addcomment code",
    "custom_undo_redo_levels": 10,
}

TINYMCE_SPELLCHECKER = True
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'lombard.middleware.ValidateExternalApiResponse'
]

ROOT_URLCONF = 'conf.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'conf.wsgi.application'
# ASGI_APPLICATION = 'conf.routing.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# defined in mode config


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'ru-RU'
TIME_ZONE = 'Europe/Moscow'
USE_I18N = True
USE_L10N = True
USE_TZ = True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'account.Profile'

FILE_UPLOAD_PERMISSIONS = 0o666
DATA_UPLOAD_MAX_MEMORY_SIZE = 15*1024*1024

ROTATE_LOG_SIZE = 15 * 1024 * 1024
ROTATE_LOG_COUNT = 10

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module}:{lineno} {message}',
            'style': '{',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'extended': {
            'format': '{levelname} {asctime} {message}',
            'style': '{',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'debug': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOG_ROOT / 'debug.log',
            'formatter': 'verbose',
        },
        'logger': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOG_ROOT / 'logger.log',
            'formatter': 'extended',
            'maxBytes': ROTATE_LOG_SIZE,
            'backupCount': ROTATE_LOG_COUNT,
        },
        'notify': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOG_ROOT / 'notify.log',
            'formatter': 'extended',
            'maxBytes': ROTATE_LOG_SIZE,
            'backupCount': ROTATE_LOG_COUNT,
        },
        'transport': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOG_ROOT / 'transport.log',
            'formatter': 'extended',
            'maxBytes': ROTATE_LOG_SIZE,
            'backupCount': ROTATE_LOG_COUNT,
        },
        'banking.psbank': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOG_ROOT / 'banking_psbank.log',
            'formatter': 'extended',
            'maxBytes': ROTATE_LOG_SIZE,
            'backupCount': ROTATE_LOG_COUNT,
        },
        'banking.paymo': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOG_ROOT / 'banking_paymo.log',
            'formatter': 'extended',
            'maxBytes': ROTATE_LOG_SIZE,
            'backupCount': ROTATE_LOG_COUNT,
        },
    },
    'loggers': {
        'debug': {
            'handlers': ['debug'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'logger': {
            'handlers': ['logger'],
            'level': 'INFO',
            'propagate': False,
        },
        'notify': {
            'handlers': ['notify'],
            'level': 'INFO',
            'propagate': False,
        },
        'transport': {
            'handlers': ['transport'],
            'level': 'INFO',
            'propagate': False,
        },
        "banking.psbank": {
            'handlers': ['banking.psbank'],
            'level': 'INFO',
            'propagate': False,
        },
        'banking.paymo': {
            'handlers': ['banking.paymo'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ),
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.DjangoModelPermissions',),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    'PAGE_SIZE': 100,
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=21),
}

CELERY_BROKER_URL = 'redis://localhost:6379/11'
CELERY_TASK_TRACK_STARTED = True
CELERY_TIMEZONE = TIME_ZONE
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_BEAT_SCHEDULE = {
    'notify_clients': {
        'task': 'lombard.tasks.notify_clients',
        'schedule': crontab(minute=0, hour=7),
    },
}
